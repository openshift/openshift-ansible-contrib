---
- name: Switch to default project
  command: oc project default

- name: set the selector for the default namespace
  command: oc annotate namespace default openshift.io/node-selector=role=infra --overwrite
  ignore_errors: true

- name: set proper permissions to assign a NFS registry
  command: oadm policy add-scc-to-user privileged system:serviceaccount:default:registry
  ignore_errors: true

- name: Check whether a registry exists or not
  command: oadm registry --dry-run
  register: registry_out
  ignore_errors: true

- name: Install registry
  command: "oadm registry --selector='role=infra' --replicas=2 --config=/etc/origin/master/admin.kubeconfig --service-account=registry"
  when: registry_out | failed
  ignore_errors: true

- name: Determine registry deployment version
  shell: "oc get --no-headers dc/docker-registry | awk '{print $2}'"
  register: registry_version_out

- name: Wait for registry to be running
  shell: oc get pod | grep -v deploy | awk '/docker-registry-{{ registry_version_out.stdout }}/{ print $3 }' | head -1
  register: deployer_output
  until: deployer_output.stdout | search("Running")
  retries: 30
  delay: 30

- name: Disable config change trigger on registry DC
  command: oc patch dc/docker-registry -p '{"spec":{"triggers":[]}}'

- name: Check if registry is still using empty directory
  command: oc volume dc/docker-registry
  register: registry_dc_out

- name: Determine if the NFS server share is accessible
  command: showmount -e "{{ nfs_registry_host }}"
  register: nfs_showmount
  until: nfs_showmount.stdout | search("{{ nfs_registry_mountpoint }}")
  retries: 5
  delay: 10

- name: Attach volume to registry DC
  command: >
    oc volume dc/docker-registry --add --overwrite
    --name=registry-storage --mount-path=/registry \
    --source='{"nfs": { "server": "{{ nfs_registry_host }}", "path": "{{ nfs_registry_mountpoint }}" }}'
  register: registry_volume_attached

- name: Deploy latest configuration of registry DC
  command: oc deploy docker-registry --latest
  register: deploy_latest
  when: registry_volume_attached | success

- name: Re-enable config trigger on docker-registry
  command: oc patch dc/docker-registry -p '{"spec":{"triggers":[{"type":"ConfigChange"}]}}'
  when: deploy_latest | success

- name: Determine registry deployment version
  shell: "oc get --no-headers dc/docker-registry | awk '{print $2}'"
  register: registry_version2_out

- name: Wait for new registry to be running
  shell: oc get pod | grep -v deploy | awk '/docker-registry-{{ registry_version2_out.stdout }}/{ print $3 }' | head -1
  register: deployer_output
  until: deployer_output.stdout | search("Running")
  retries: 30
  delay: 30
