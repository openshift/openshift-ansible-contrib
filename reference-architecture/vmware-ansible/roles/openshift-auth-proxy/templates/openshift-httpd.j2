LoadModule request_module modules/mod_request.so
LoadModule lookup_identity_module modules/mod_lookup_identity.so
LoadModule authnz_pam_module modules/mod_authnz_pam.so

# Nothing needs to be served over HTTP.  This virtual host simply redirects to HTTPS.
<VirtualHost *:80>
  DocumentRoot /var/www/html
  RewriteEngine On
  RewriteRule ^(.*)$     https://%{HTTP_HOST}$1 [R,L]
</VirtualHost>

<VirtualHost *:443>
  ErrorLog logs/auth_proxy_error_log
  TransferLog logs/auth_proxy_access_log
  LogLevel debug

  # This needs to match the certificates you generated.  See the CN and X509v3
  # Subject Alternative Name in the output of:
  # openssl x509 -text -in /etc/pki/tls/certs/proxy.example.com.crt
  ServerName {{infrastructure_hosts['auth_proxy_0']['hostname']}}

  DocumentRoot /var/www/html

  SSLEngine on
  SSLCertificateFile /etc/pki/tls/certs/auth_proxy.crt
  SSLCertificateKeyFile /etc/pki/tls/private/auth_proxy.key
  SSLCACertificateFile /etc/pki/CA/certs/ca.crt

  SSLProxyEngine on
  SSLProxyCACertificateFile /etc/pki/CA/certs/ca.crt
  SSLProxyMachineCertificateFile /etc/pki/tls/certs/authproxy.pem

  RewriteEngine On
  RewriteRule ^/console(.*)$ https://{{openshift_master_hostname}}:8443/console [R,L]

  RewriteCond %{REQUEST_URI} ^/challenging-proxy
  RewriteCond %{HTTP:X-Csrf-Token} ^$ [NC]
  RewriteRule ^.* - [F,L]

  RewriteRule ^(.*)$ https://{{openshift_master_hostname}}:8443/console [R,L]

  <Location /challenging-proxy/oauth/authorize>
    ProxyPass https://{{openshift_master_hostname}}:8443/oauth/authorize
    AuthType Basic
    AuthBasicProvider PAM
    AuthPAMService openshift
    Require valid-user
  </Location>

  <ProxyMatch /oauth/authorize>
    AuthName openshift
    RequestHeader set X-Remote-User %{REMOTE_USER}s
  </ProxyMatch>
</VirtualHost>

RequestHeader unset X-Remote-User
