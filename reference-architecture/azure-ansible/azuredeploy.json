{
  "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion" : "1.0.0.0",
  "parameters" : {
    "adminUsername" : {
      "type" : "string",
      "minLength" : 1,
      "metadata" : {
        "description" : "User name for the Virtual Machine and OpenShift Webconsole."
      }
    },
    "adminPassword" : {
      "type" : "securestring",
      "metadata" : {
        "description" : "User password for the OpenShift Webconsole"
      }
    },
    "sshKeyData" : {
      "type" : "string",
      "metadata" : {
        "description" : "SSH RSA public key file as a string."
      }
    },
    "WildcardZone" : {
      "type" : "string",
      "minLength" : 1,
      "metadata" : {
        "description" : "Globally unique wildcard DNS domain for app access."
      }
    },
    "numberOfNodes" : {
      "type" : "int",
      "defaultValue" : 3,
      "minValue" : 3,
      "maxValue" : 30,
      "metadata" : {
        "description" : "Number of OpenShift Nodes to deploy (max 30)"
      }
    },
    "image" : {
      "type" : "string",
      "allowedValues" : [
        "rhel"
      ],
      "defaultValue" : "rhel",
      "metadata" : {
        "description" : "OS to use.Red Hat Enterprise Linux"
      }
    },
    "masterVMSize" : {
      "type" : "string",
      "defaultValue" : "Standard_DS3",
      "allowedValues" : [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata" : {
        "description" : "The size of the Master Virtual Machine."
      }
    },
    "infranodeVMSize" : {
      "type" : "string",
      "defaultValue" : "Standard_DS2",
      "allowedValues" : [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata" : {
        "description" : "The size of the Infranode Virtual Machine."
      }
    },
    "nodeVMSize" : {
      "type" : "string",
      "defaultValue" : "Standard_DS12",
      "allowedValues" : [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata" : {
        "description" : "The size of the each Node Virtual Machine."
      }
    },
    "RHNUserName" : {
      "type" : "string",
      "minLength" : 1,
      "metadata" : {
        "description" : "Red Hat Subscription User Name or Email Address"
      }
    },
    "RHNPassword" : {
      "type" : "securestring",
      "metadata" : {
        "description" : "Red Hat Subscription Password"
      }
    },
    "SubscriptionPoolId" : {
      "type" : "string",
      "minLength" : 1,
      "metadata" : {
        "description" : "Pool ID of the Red Hat subscritpion to use"
      }
    },
    "sshPrivateData" : {
      "type" : "securestring",
      "metadata" : {
        "description" : "SSH RSA private key file as a base64 string."
      }
    },
    "storeVMSize" : {
      "type" : "string",
      "defaultValue" : "Standard_DS3_v2",
      "allowedValues" : [
        "Standard_DS3_v2",
        "Standard_DS12\t"
      ],
      "metadata" : {
        "description" : "The size of the each Node Virtual Machine."
      }
    }
  },
  "variables" : {
    "baseTemplateUrl" : "https://raw.githubusercontent.com/openshift/openshift-ansible-contrib/master/reference-architecture/azure-ansible/",
    "baseVMachineTemplateUriInfranode" : "[concat(variables('baseTemplateUrl'), 'infranode.json')]",
    "baseVMachineTemplateUriNode" : "[concat(variables('baseTemplateUrl'), 'node.json')]",
    "baseVMachineTemplateUriMaster" : "[concat(variables('baseTemplateUrl'), 'master.json')]",
    "location" : "[resourceGroup().location]",
    "virtualNetworkName" : "openshiftVnet",
    "addressPrefix" : "10.0.0.0/16",
    "infranodesubnetName" : "infranodeSubnet",
    "infranodesubnetPrefix" : "10.0.2.0/24",
    "nodesubnetName" : "nodeSubnet",
    "nodesubnetPrefix" : "10.0.1.0/24",
    "mastersubnetName" : "masterSubnet",
    "mastersubnetPrefix" : "10.0.0.0/24",
    "apiVersion" : "2015-06-15",
    "infranodeStorageName" : "[concat(uniqueString(resourceGroup().id), 'infranodesa')]",
    "nodeStorageName" : "[concat(uniqueString(resourceGroup().id), 'nodesa')]",
    "masterStorageName" : "[concat(uniqueString(resourceGroup().id), 'mastersa')]",
    "vhdStorageType" : "Standard_LRS",
    "vnetId" : "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "infranodeSubnetRef" : "[concat(variables('vnetId'), '/subnets/', variables('infranodesubnetName'))]",
    "nodeSubnetRef" : "[concat(variables('vnetId'), '/subnets/', variables('nodesubnetName'))]",
    "masterSubnetRef" : "[concat(variables('vnetId'), '/subnets/', variables('mastersubnetName'))]",
    "rhel" : {
      "publisher" : "Redhat",
      "offer" : "RHEL",
      "sku" : "7.2",
      "version" : "latest"
    },
    "baseVMachineTemplateUriBastion" : "[concat(variables('baseTemplateUrl'), 'bastion.json')]",
    "tmApiVersion" : "2015-11-01",
    "baseVMachineTemplateUriStore" : "[concat(variables('baseTemplateUrl'), 'store.json')]"
  },
  "resources" : [
    {
      "type" : "Microsoft.Storage/storageAccounts",
      "name" : "[variables('infranodeStorageName')]",
      "apiVersion" : "[variables('apiVersion')]",
      "location" : "[variables('location')]",
      "tags" : {
        "displayName" : "StorageAccount"
      },
      "properties" : {
        "accountType" : "[variables('vhdStorageType')]"
      }
    },
    {
      "type" : "Microsoft.Storage/storageAccounts",
      "name" : "[variables('nodeStorageName')]",
      "apiVersion" : "[variables('apiVersion')]",
      "location" : "[variables('location')]",
      "tags" : {
        "displayName" : "StorageAccount"
      },
      "properties" : {
        "accountType" : "[variables('vhdStorageType')]"
      }
    },
    {
      "type" : "Microsoft.Storage/storageAccounts",
      "name" : "[variables('masterStorageName')]",
      "apiVersion" : "[variables('apiVersion')]",
      "location" : "[variables('location')]",
      "tags" : {
        "displayName" : "StorageAccount"
      },
      "properties" : {
        "accountType" : "[variables('vhdStorageType')]"
      }
    },
    {
      "apiVersion" : "[variables('apiVersion')]",
      "type" : "Microsoft.Network/virtualNetworks",
      "name" : "[variables('virtualNetworkName')]",
      "location" : "[variables('location')]",
      "tags" : {
        "displayName" : "VirtualNetwork"
      },
      "properties" : {
        "addressSpace" : {
          "addressPrefixes" : [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets" : [
          {
            "name" : "[variables('infranodesubnetName')]",
            "properties" : {
              "addressPrefix" : "[variables('infranodesubnetPrefix')]"
            }
          },
          {
            "name" : "[variables('nodesubnetName')]",
            "properties" : {
              "addressPrefix" : "[variables('nodesubnetPrefix')]"
            }
          },
          {
            "name" : "[variables('mastersubnetName')]",
            "properties" : {
              "addressPrefix" : "[variables('mastersubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "name" : "[concat('nodeSet', copyindex())]",
      "type" : "Microsoft.Resources/deployments",
      "apiVersion" : "2013-03-01",
      "copy" : {
        "name" : "nodeSet",
        "count" : "[parameters('numberOfNodes')]"
      },
      "dependsOn" : [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('nodeStorageName'))]"
      ],
      "properties" : {
        "mode" : "Incremental",
        "templateLink" : {
          "uri" : "[variables('baseVMachineTemplateUriNode')]",
          "contentVersion" : "1.0.0.0"
        },
        "parameters" : {
          "vmName" : {
            "value" : "[concat('node', padLeft(add(copyindex(), 1), 2, '0'))]"
          },
          "sa" : {
            "value" : "[variables('nodeStorageName')]"
          },
          "subnetRef" : {
            "value" : "[variables('nodeSubnetRef')]"
          },
          "vmSize" : {
            "value" : "[parameters('nodeVMSize')]"
          },
          "adminUsername" : {
            "value" : "[parameters('adminUsername')]"
          },
          "sshKeyData" : {
            "value" : "[parameters('sshKeyData')]"
          },
          "baseTemplateUrl" : {
            "value" : "[variables('baseTemplateUrl')]"
          },
          "imageReference" : {
            "value" : "[variables(parameters('image'))]"
          }
        }
      }
    },
    {
      "name" : "master1",
      "type" : "Microsoft.Resources/deployments",
      "apiVersion" : "2013-03-01",
      "dependsOn" : [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('masterStorageName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'infranode1')]"
      ],
      "properties" : {
        "mode" : "Incremental",
        "templateLink" : {
          "uri" : "[variables('baseVMachineTemplateUriMaster')]",
          "contentVersion" : "1.0.0.0"
        },
        "parameters" : {
          "vmName" : {
            "value" : "master1"
          },
          "dnsName" : {
            "value" : "[concat(resourceGroup().name,'m1')]"
          },
          "sa" : {
            "value" : "[variables('masterStorageName')]"
          },
          "subnetRef" : {
            "value" : "[variables('masterSubnetRef')]"
          },
          "vmSize" : {
            "value" : "[parameters('masterVMSize')]"
          },
          "adminUsername" : {
            "value" : "[parameters('adminUsername')]"
          },
          "adminPassword" : {
            "value" : "[parameters('adminPassword')]"
          },
          "sshKeyData" : {
            "value" : "[parameters('sshKeyData')]"
          },
          "numberOfNodes" : {
            "value" : "[parameters('numberOfNodes')]"
          },
          "baseTemplateUrl" : {
            "value" : "[variables('baseTemplateUrl')]"
          },
          "routerExtIP" : {
            "value" : "[reference('infranode1').outputs.pip.value]"
          },
          "imageReference" : {
            "value" : "[variables(parameters('image'))]"
          },
          "RHNUserName" : {
            "value" : "[parameters('RHNUserName')]"
          },
          "RHNPassword" : {
            "value" : "[parameters('RHNPassword')]"
          },
          "SubscriptionPoolId" : {
            "value" : "[parameters('SubscriptionPoolId')]"
          },
          "sshPrivateData" : {
            "value" : "[parameters('sshPrivateData')]"
          }
        }
      }
    },
    {
      "name" : "infranode1",
      "type" : "Microsoft.Resources/deployments",
      "apiVersion" : "2013-03-01",
      "dependsOn" : [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('infranodeStorageName'))]"
      ],
      "properties" : {
        "mode" : "Incremental",
        "templateLink" : {
          "uri" : "[variables('baseVMachineTemplateUriInfranode')]",
          "contentVersion" : "1.0.0.0"
        },
        "parameters" : {
          "vmName" : {
            "value" : "infranode1"
          },
          "sa" : {
            "value" : "[variables('infranodeStorageName')]"
          },
          "subnetRef" : {
            "value" : "[variables('infranodeSubnetRef')]"
          },
          "vmSize" : {
            "value" : "[parameters('infranodeVMSize')]"
          },
          "adminUsername" : {
            "value" : "[parameters('adminUsername')]"
          },
          "sshKeyData" : {
            "value" : "[parameters('sshKeyData')]"
          },
          "baseTemplateUrl" : {
            "value" : "[variables('baseTemplateUrl')]"
          },
          "imageReference" : {
            "value" : "[variables(parameters('image'))]"
          },
          "dnsName" : {
            "value" : "[concat(resourceGroup().name,'i1')]"
          }
        }
      }
    },
    {
      "name" : "bastion",
      "type" : "Microsoft.Resources/deployments",
      "apiVersion" : "2013-03-01",
      "dependsOn" : [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('masterStorageName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'master1')]",
        "[resourceId('Microsoft.Resources/deployments', 'master2')]",
        "[resourceId('Microsoft.Resources/deployments', 'master3')]",
        "[resourceId('Microsoft.Resources/deployments', 'infranode1')]"
      ],
      "properties" : {
        "mode" : "Incremental",
        "templateLink" : {
          "uri" : "[variables('baseVMachineTemplateUriBastion')]",
          "contentVersion" : "1.0.0.0"
        },
        "parameters" : {
          "vmName" : {
            "value" : "bastion"
          },
          "dnsName" : {
            "value" : "[concat(resourceGroup().name,'b')]"
          },
          "sa" : {
            "value" : "[variables('masterStorageName')]"
          },
          "subnetRef" : {
            "value" : "[variables('masterSubnetRef')]"
          },
          "vmSize" : {
            "value" : "[parameters('masterVMSize')]"
          },
          "adminUsername" : {
            "value" : "[parameters('adminUsername')]"
          },
          "adminPassword" : {
            "value" : "[parameters('adminPassword')]"
          },
          "sshKeyData" : {
            "value" : "[parameters('sshKeyData')]"
          },
          "numberOfNodes" : {
            "value" : "[parameters('numberOfNodes')]"
          },
          "baseTemplateUrl" : {
            "value" : "[variables('baseTemplateUrl')]"
          },
          "routerExtIP" : {
            "value" : "[reference('infranode1').outputs.pip.value]"
          },
          "imageReference" : {
            "value" : "[variables(parameters('image'))]"
          },
          "RHNUserName" : {
            "value" : "[parameters('RHNUserName')]"
          },
          "RHNPassword" : {
            "value" : "[parameters('RHNPassword')]"
          },
          "SubscriptionPoolId" : {
            "value" : "[parameters('SubscriptionPoolId')]"
          },
          "sshPrivateData" : {
            "value" : "[parameters('sshPrivateData')]"
          },
          "wildcardZone" : {
            "value" : "[parameters('WildcardZone')]"
          }
        }
      }
    },
    {
      "name" : "master2",
      "type" : "Microsoft.Resources/deployments",
      "apiVersion" : "2013-03-01",
      "dependsOn" : [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('masterStorageName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'infranode1')]"
      ],
      "properties" : {
        "mode" : "Incremental",
        "templateLink" : {
          "uri" : "[variables('baseVMachineTemplateUriMaster')]",
          "contentVersion" : "1.0.0.0"
        },
        "parameters" : {
          "vmName" : {
            "value" : "master2"
          },
          "dnsName" : {
            "value" : "[concat(resourceGroup().name,'m2')]"
          },
          "sa" : {
            "value" : "[variables('masterStorageName')]"
          },
          "subnetRef" : {
            "value" : "[variables('masterSubnetRef')]"
          },
          "vmSize" : {
            "value" : "[parameters('masterVMSize')]"
          },
          "adminUsername" : {
            "value" : "[parameters('adminUsername')]"
          },
          "adminPassword" : {
            "value" : "[parameters('adminPassword')]"
          },
          "sshKeyData" : {
            "value" : "[parameters('sshKeyData')]"
          },
          "numberOfNodes" : {
            "value" : "[parameters('numberOfNodes')]"
          },
          "baseTemplateUrl" : {
            "value" : "[variables('baseTemplateUrl')]"
          },
          "routerExtIP" : {
            "value" : "[reference('infranode1').outputs.pip.value]"
          },
          "imageReference" : {
            "value" : "[variables(parameters('image'))]"
          },
          "RHNUserName" : {
            "value" : "[parameters('RHNUserName')]"
          },
          "RHNPassword" : {
            "value" : "[parameters('RHNPassword')]"
          },
          "SubscriptionPoolId" : {
            "value" : "[parameters('SubscriptionPoolId')]"
          },
          "sshPrivateData" : {
            "value" : "[parameters('sshPrivateData')]"
          }
        }
      }
    },
    {
      "name" : "master3",
      "type" : "Microsoft.Resources/deployments",
      "apiVersion" : "2013-03-01",
      "dependsOn" : [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('masterStorageName'))]"
      ],
      "properties" : {
        "mode" : "Incremental",
        "templateLink" : {
          "uri" : "[variables('baseVMachineTemplateUriMaster')]",
          "contentVersion" : "1.0.0.0"
        },
        "parameters" : {
          "vmName" : {
            "value" : "master3"
          },
          "dnsName" : {
            "value" : "[concat(resourceGroup().name,'m3')]"
          },
          "sa" : {
            "value" : "[variables('masterStorageName')]"
          },
          "subnetRef" : {
            "value" : "[variables('masterSubnetRef')]"
          },
          "vmSize" : {
            "value" : "[parameters('masterVMSize')]"
          },
          "adminUsername" : {
            "value" : "[parameters('adminUsername')]"
          },
          "adminPassword" : {
            "value" : "[parameters('adminPassword')]"
          },
          "sshKeyData" : {
            "value" : "[parameters('sshKeyData')]"
          },
          "numberOfNodes" : {
            "value" : "[parameters('numberOfNodes')]"
          },
          "baseTemplateUrl" : {
            "value" : "[variables('baseTemplateUrl')]"
          },
          "routerExtIP" : {
            "value" : "[reference('infranode1').outputs.pip.value]"
          },
          "imageReference" : {
            "value" : "[variables(parameters('image'))]"
          },
          "RHNUserName" : {
            "value" : "[parameters('RHNUserName')]"
          },
          "RHNPassword" : {
            "value" : "[parameters('RHNPassword')]"
          },
          "SubscriptionPoolId" : {
            "value" : "[parameters('SubscriptionPoolId')]"
          },
          "sshPrivateData" : {
            "value" : "[parameters('sshPrivateData')]"
          }
        }
      }
    },
    {
      "apiVersion" : "[variables('tmApiVersion')]",
      "type" : "Microsoft.Network/trafficManagerProfiles",
      "name" : "MasterLB",
      "location" : "global",
      "dependsOn" : [
        "[resourceId('Microsoft.Resources/deployments', 'master1')]",
        "[resourceId('Microsoft.Resources/deployments', 'master2')]",
        "[resourceId('Microsoft.Resources/deployments', 'master3')]"
      ],
      "properties" : {
        "profileStatus" : "Enabled",
        "trafficRoutingMethod" : "Weighted",
        "dnsConfig" : {
          "relativeName" : "[resourceGroup().name]",
          "ttl" : 30
        },
        "monitorConfig" : {
          "protocol" : "https",
          "port" : 8443,
          "path" : "/api"
        },
        "endpoints" : [
          {
            "name" : "endpoint0",
            "type" : "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
            "properties" : {
              "targetResourceId" : "[resourceId('Microsoft.Network/publicIPAddresses', 'master1pip')]",
              "endpointStatus" : "Enabled",
              "weight" : 1
            }
          },
          {
            "name" : "endpoint1",
            "type" : "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
            "properties" : {
              "targetResourceId" : "[resourceId('Microsoft.Network/publicIPAddresses', 'master2pip')]",
              "endpointStatus" : "Enabled",
              "weight" : 2
            }
          },
          {
            "name" : "endpoint2",
            "type" : "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
            "properties" : {
              "targetResourceId" : "[resourceId('Microsoft.Network/publicIPAddresses', 'master3pip')]",
              "endpointStatus" : "Enabled",
              "weight" : 3
            }
          }
        ]
      }
    },
    {
      "name" : "store1",
      "type" : "Microsoft.Resources/deployments",
      "apiVersion" : "2013-03-01",
      "dependsOn" : [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('nodeStorageName'))]"
      ],
      "properties" : {
        "mode" : "Incremental",
        "templateLink" : {
          "uri" : "[variables('baseVMachineTemplateUriStore')]",
          "contentVersion" : "1.0.0.0"
        },
        "parameters" : {
          "vmName" : {
            "value" : "store1"
          },
          "sa" : {
            "value" : "[variables('nodeStorageName')]"
          },
          "subnetRef" : {
            "value" : "[variables('nodeSubnetRef')]"
          },
          "vmSize" : {
            "value" : "[parameters('storeVMSize')]"
          },
          "adminUsername" : {
            "value" : "[parameters('adminUsername')]"
          },
          "sshKeyData" : {
            "value" : "[parameters('sshKeyData')]"
          },
          "baseTemplateUrl" : {
            "value" : "[variables('baseTemplateUrl')]"
          },
          "imageReference" : {
            "value" : "[variables(parameters('image'))]"
          },
          "sshPrivateData" : {
            "value" : "[parameters('sshPrivateData')]"
          }
        }
      }
    },
    {
      "name" : "infranode2",
      "type" : "Microsoft.Resources/deployments",
      "apiVersion" : "2013-03-01",
      "dependsOn" : [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('infranodeStorageName'))]"
      ],
      "properties" : {
        "mode" : "Incremental",
        "templateLink" : {
          "uri" : "[variables('baseVMachineTemplateUriInfranode')]",
          "contentVersion" : "1.0.0.0"
        },
        "parameters" : {
          "vmName" : {
            "value" : "infranode2"
          },
          "sa" : {
            "value" : "[variables('infranodeStorageName')]"
          },
          "subnetRef" : {
            "value" : "[variables('infranodeSubnetRef')]"
          },
          "vmSize" : {
            "value" : "[parameters('infranodeVMSize')]"
          },
          "adminUsername" : {
            "value" : "[parameters('adminUsername')]"
          },
          "sshKeyData" : {
            "value" : "[parameters('sshKeyData')]"
          },
          "baseTemplateUrl" : {
            "value" : "[variables('baseTemplateUrl')]"
          },
          "imageReference" : {
            "value" : "[variables(parameters('image'))]"
          },
          "dnsName" : {
            "value" : "[concat(resourceGroup().name,'i2')]"
          }
        }
      }
    },
    {
      "name" : "infranode3",
      "type" : "Microsoft.Resources/deployments",
      "apiVersion" : "2013-03-01",
      "dependsOn" : [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('infranodeStorageName'))]"
      ],
      "properties" : {
        "mode" : "Incremental",
        "templateLink" : {
          "uri" : "[variables('baseVMachineTemplateUriInfranode')]",
          "contentVersion" : "1.0.0.0"
        },
        "parameters" : {
          "vmName" : {
            "value" : "infranode3"
          },
          "sa" : {
            "value" : "[variables('infranodeStorageName')]"
          },
          "subnetRef" : {
            "value" : "[variables('infranodeSubnetRef')]"
          },
          "vmSize" : {
            "value" : "[parameters('infranodeVMSize')]"
          },
          "adminUsername" : {
            "value" : "[parameters('adminUsername')]"
          },
          "sshKeyData" : {
            "value" : "[parameters('sshKeyData')]"
          },
          "baseTemplateUrl" : {
            "value" : "[variables('baseTemplateUrl')]"
          },
          "imageReference" : {
            "value" : "[variables(parameters('image'))]"
          },
          "dnsName" : {
            "value" : "[concat(resourceGroup().name,'i3')]"
          }
        }
      }
    },
    {
      "apiVersion" : "[variables('tmApiVersion')]",
      "type" : "Microsoft.Network/trafficManagerProfiles",
      "name" : "AppLB",
      "location" : "global",
      "dependsOn" : [
        "[resourceId('Microsoft.Resources/deployments', 'infranode1')]",
        "[resourceId('Microsoft.Resources/deployments', 'infranode2')]",
        "[resourceId('Microsoft.Resources/deployments', 'infranode3')]"
      ],
      "properties" : {
        "profileStatus" : "Enabled",
        "trafficRoutingMethod" : "Weighted",
        "dnsConfig" : {
          "relativeName" : "[concat('**.',parameters('WildcardZone'))]",
          "ttl" : 30
        },
        "monitorConfig" : {
          "protocol" : "https",
          "port" : 8080,
          "path" : "/api"
        },
        "endpoints" : [
          {
            "name" : "endpoint0",
            "type" : "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
            "properties" : {
              "targetResourceId" : "[resourceId('Microsoft.Network/publicIPAddresses', 'infranode1pip')]",
              "endpointStatus" : "Enabled",
              "weight" : 1
            }
          },
          {
            "name" : "endpoint1",
            "type" : "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
            "properties" : {
              "targetResourceId" : "[resourceId('Microsoft.Network/publicIPAddresses', 'infranode2pip')]",
              "endpointStatus" : "Enabled",
              "weight" : 2
            }
          },
          {
            "name" : "endpoint2",
            "type" : "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
            "properties" : {
              "targetResourceId" : "[resourceId('Microsoft.Network/publicIPAddresses', 'infranode3pip')]",
              "endpointStatus" : "Enabled",
              "weight" : 3
            }
          }
        ]
      }
    }
  ],
  "outputs" : {
    "Openshift Webconsole" : {
      "type" : "string",
      "value" : "[concat('https://', reference('master1').outputs.fqdn.value, ':8443')]"
    },
    "Openshift Master ssh" : {
      "type" : "string",
      "value" : "[concat('ssh -A ', reference('bastion').outputs.pip.value)]"
    },
    "Openshift Router Public IP" : {
      "type" : "string",
      "value" : "[reference('infranode1').outputs.pip.value]"
    }
  }
}