---
- name: Gather facts
  openshift_facts:
    role: common

#TODO: If any of the rest of these steps fail subsequent runs will fail because
#validate project will already exist
#
#Not sure of the best safe way to handle this because if we allow errors
#On project validation the delete will delete a project ansible potentially
#Didn't create.  It seems like the best option is to randomize the name
#Perhaps we will end up with an unused project but we can alert if we don't
#get to the Delete task but we could add a task that shows the projects
#that are likely orphaned validation projects and the necessary steps
#to remove them
- name: Create the validation project
  command: "{{ openshift.common.client_binary }} new-project validate"

- name: Create Hello world app
  shell: "{{ openshift.common.client_binary }} new-app --template cakephp-mysql-example"

- name: Wait for build to complete
  shell: "{{ openshift.common.client_binary }} get pod | grep -v deploy | awk '/cakephp-mysql-example-1-build/{ print $3 }'"
  register: build_output
  until: build_output.stdout | search("Completed")
  retries: 30
  delay: 15

- name: Wait for App to be running
  shell: "{{ openshift.common.client_binary }} get pod | grep -v deploy | grep -v build  | awk '/cakephp-mysql-example-1-*/{print $3}'"
  register: deployer_output
  until: deployer_output.stdout | search("Running")
  retries: 30
  delay: 15

- name: Sleep to allow for route propegation
  pause:
     seconds: 10
- name: check the status of the page
  uri:
     url: "http://cakephp-mysql-example-validate.{{ wildcard_zone }}"
     status_code: 200
     method: GET

- name: Delete the Project
  command: "{{ openshift.common.client_binary }} delete project validate"
