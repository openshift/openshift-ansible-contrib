---
- block:
    - name: Allow rhel_subscription a longer timeout to help out with subscription-manager
      lineinfile:
        dest: /etc/rhsm/rhsm.conf
        line: 'server_timeout=600'
        insertafter: '^proxy_password ='

    - name: Check for sat config file
      stat: path=/etc/rhsm/rhsm.conf.kat-backup
      register: sat_cfg

    - name: Remove satellite configuration if using RH CDN
      command: "mv -f /etc/rhsm/rhsm.conf.kat-backup /etc/rhsm/rhsm.conf"
      when: rhel_subscription_user is defined and rhel_subscription_user and sat_cfg.stat.exists == True
      ignore_errors: yes

    - name: Remove satellite SSL if using RH CDN
      command: "rpm -e $(rpm -qa katello-ca-consumer*)"
      when: rhel_subscription_user is defined and rhel_subscription_user and sat_cfg.stat.exists == True
      ignore_errors: yes

    - name: Is the host already registered?
      command: "subscription-manager status"
      register: subscribed
      changed_when: no
      ignore_errors: yes

    - name: Register host via Activation key
      redhat_subscription:
        activationkey: "{{ rhel_subscription_activation_key }}"
        org_id: "{{ rhel_subscription_org_id }}"
        state: present
        pool: "{{ rhel_subscription_pool }}"
      when: rhel_subscription_activation_key is defined and rhel_subscription_activation_key
      register: register_key_result
      ignore_errors: yes

    - name: Register host
      redhat_subscription:
        username: "{{ rhel_subscription_user }}"
        password: "{{ rhel_subscription_pass }}"
        state: present
        pool: "{{ rhel_subscription_pool }}"
      when: "'Current' not in subscribed.stdout and rhel_subscription_user is defined and rhel_subscription_user"

    - name: Check if subscription is attached
      command: subscription-manager list --consumed --pool-only --matches="{{ rhel_subscription_pool }}"
      register: subscription_attached
      changed_when: no

    - block:
        - name: Get pool id
          shell: subscription-manager list --available --pool-only --matches="{{ rhel_subscription_pool }}" | head -n 1
          register: pool_id
          changed_when: no

        - name: Fail if no pool ID is returned
          fail:
            msg: No subscription matching "{{ rhel_subscription_pool }}" found
          when: pool_id.stdout == ""

        - name: Attach subscription
          command: subscription-manager attach --pool="{{ pool_id.stdout }}"

      when: subscription_attached.stdout == ""

  when: ansible_distribution == "RedHat"
